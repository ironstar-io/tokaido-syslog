@version: 3.8
########################
# Options
########################

options {     
    use_dns(no); 
    owner(syslog); 
    group(web); 
    perm(0660); 
    dir_perm(2770); 
    dir_owner(syslog); 
    dir_group(web);
    create_dirs(yes);
    stats_freq(3600);
    ts-format(iso);
    time-zone(UTC);
}; 

########################
# Templates
########################

template t_msgfmt {
    template("${ISODATE} ${MESSAGE}\n");
};

########################
# Sources
########################
source s_local { internal(); };

source s_net {
    udp(
        ip("0.0.0.0")
        port("5514")
    );
    syslog(
        ip("0.0.0.0")
        port("5601")
    );
};

########################
# Filters
########################

filter f_haproxy {    
    program("haproxy")
};

########################
# Destinations
########################

destination d_local {
    file("/tokaido/logs/syslog/syslog");
};

destination d_haproxy {
    file("/tokaido/logs/haproxy/haproxy.log" owner(haproxy));
};

destination d_unclassified {
    file("/tokaido/logs/syslog/unclassified.$HOST.$SOURCE.$PROGRAM");
};


########################
# Logs
########################

# Local 
log { 
    source(s_local);
    destination(d_local); 
    flags(final);
};

# HAproxy
log { 
    source(s_net); 
    filter(f_haproxy);
    destination(d_haproxy); 
    flags(final);
};

# Unclassified/unknown
log { 
    source(s_net);         
    destination(d_unclassified); 
    flags(fallback);
};



# # Here's come the filter options. With this rules, we can set which
# # message go where.

# filter f_dbg { level(debug); };
# filter f_info { level(info); };
# filter f_notice { level(notice); };
# filter f_warn { level(warn); };
# filter f_err { level(err); };
# filter f_crit { level(crit .. emerg); };

# filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
# filter f_error { level(err .. emerg) ; };
# filter f_messages { level(info,notice,warn) and
#                     not facility(auth,authpriv,cron,daemon,mail,news); };

# filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
# filter f_cron { facility(cron) and not filter(f_debug); };
# filter f_daemon { facility(daemon) and not filter(f_debug); };
# filter f_kern { facility(kern) and not filter(f_debug); };
# filter f_lpr { facility(lpr) and not filter(f_debug); };
# filter f_local { facility(local0, local1, local3, local4, local5,
#                         local6, local7) and not filter(f_debug); };
# filter f_mail { facility(mail) and not filter(f_debug); };
# filter f_news { facility(news) and not filter(f_debug); };
# filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug); };
# filter f_user { facility(user) and not filter(f_debug); };
# filter f_uucp { facility(uucp) and not filter(f_debug); };

# filter f_cnews { level(notice, err, crit) and facility(news); };
# filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };

# filter f_ppp { facility(local2) and not filter(f_debug); };
# filter f_console { level(warn .. emerg); };

# ########################
# # Log paths
# ########################
# log { source(s_src); filter(f_auth); destination(d_auth); };
# log { source(s_src); filter(f_cron); destination(d_cron); };
# log { source(s_src); filter(f_daemon); destination(d_daemon); };
# log { source(s_src); filter(f_kern); destination(d_kern); };
# log { source(s_src); filter(f_lpr); destination(d_lpr); };
# log { source(s_src); filter(f_syslog3); destination(d_syslog); };
# log { source(s_src); filter(f_user); destination(d_user); };
# log { source(s_src); filter(f_uucp); destination(d_uucp); };

# log { source(s_src); filter(f_mail); destination(d_mail); };
# #log { source(s_src); filter(f_mail); filter(f_info); destination(d_mailinfo); };
# #log { source(s_src); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
# #log { source(s_src); filter(f_mail); filter(f_err); destination(d_mailerr); };

# log { source(s_src); filter(f_news); filter(f_crit); destination(d_newscrit); };
# log { source(s_src); filter(f_news); filter(f_err); destination(d_newserr); };
# log { source(s_src); filter(f_news); filter(f_notice); destination(d_newsnotice); };
# #log { source(s_src); filter(f_cnews); destination(d_console_all); };
# #log { source(s_src); filter(f_cother); destination(d_console_all); };

# #log { source(s_src); filter(f_ppp); destination(d_ppp); };

# log { source(s_src); filter(f_debug); destination(d_debug); };
# log { source(s_src); filter(f_error); destination(d_error); };
# log { source(s_src); filter(f_messages); destination(d_messages); };

# log { source(s_src); filter(f_console); destination(d_console_all);
#                                     destination(d_xconsole); };
# log { source(s_src); filter(f_crit); destination(d_console); };

# # All messages send to a remote site
# #
# #log { source(s_src); destination(d_net); };

# ###
# # Include all config files in /etc/syslog-ng/conf.d/
# ###
# @include "/etc/syslog-ng/conf.d/*.conf"
